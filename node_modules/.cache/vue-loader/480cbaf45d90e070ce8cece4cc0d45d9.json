{"remainingRequest":"/Users/justina/git/vue-d3-js/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justina/git/vue-d3-js/src/components/Overview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/justina/git/vue-d3-js/src/components/Overview.vue","mtime":1537442303221},{"path":"/Users/justina/git/vue-d3-js/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/justina/git/vue-d3-js/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justina/git/vue-d3-js/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/justina/git/vue-d3-js/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n\nexport default {\n  name: 'Overview',\n  data() {\n    return {\n      currencies: null,\n      updated: null,\n      loading: true,\n      showError: false,\n      error: null,\n    };\n  },\n  mounted() {\n    /**\n     * Get data method uses axios to get data via a HTTP API Endpoint\n     */\n    axios\n      .get('https://api.coindesk.com/v1/bpi/currentprice.json') // HTTP GET Request\n      .then(response => {\n        this.currencies = response.data['bpi'];\n        this.updated    = response.data.time.updated;\n      })\n      .catch(error => { // Executes if an error occurs if code is not >= 200 && < 300\n        this.showError = true;\n        this.error     = error;\n      })\n      .finally(() => this.loading = false); // Always occurs even if there is an error\n  },\n  filters: {\n    currencydecimal(value) {\n      return value.toFixed(2);\n    },\n  },\n};\n",{"version":3,"sources":["Overview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Overview.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"overview\">\n\n    <h1 class=\"animated bounceInLeft\">Bitcoin Price Index</h1>\n\n    <div class=\"box loading\" v-if=\"loading\">\n      <p>Loading...</p>\n    </div>\n\n    <div class=\"box error\" v-else-if=\"showError\">\n      <p class=\"big\">üôÅ</p>\n      <p>Error accessing the API: {{ error.message }}</p>\n      <p v-if=\"error.response\">Response: {{ error.response }}</p>\n    </div>\n\n    <div class=\"box animated bounceInLeft\" v-else>\n\n      <div v-for=\"currency in currencies\" :key=\"currency.code\">\n\n        <span>{{ currency.description }} ({{ currency.code }}):</span>\n\n        <span class=\"highlight right\">\n          <span v-html=\"currency.symbol\"></span>{{ currency['rate_float'] | currencydecimal }}\n        </span>\n      </div>\n    </div>\n\n    <div class=\"updated animated bounceInLeft\" v-if=\"!showError\">Updated: {{ updated }}</div>\n\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n\n  export default {\n    name: 'Overview',\n    data() {\n      return {\n        currencies: null,\n        updated: null,\n        loading: true,\n        showError: false,\n        error: null,\n      };\n    },\n    mounted() {\n      /**\n       * Get data method uses axios to get data via a HTTP API Endpoint\n       */\n      axios\n        .get('https://api.coindesk.com/v1/bpi/currentprice.json') // HTTP GET Request\n        .then(response => {\n          this.currencies = response.data['bpi'];\n          this.updated    = response.data.time.updated;\n        })\n        .catch(error => { // Executes if an error occurs if code is not >= 200 && < 300\n          this.showError = true;\n          this.error     = error;\n        })\n        .finally(() => this.loading = false); // Always occurs even if there is an error\n    },\n    filters: {\n      currencydecimal(value) {\n        return value.toFixed(2);\n      },\n    },\n  };\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]}]}