{"remainingRequest":"/Users/justina/git/vue-highcharts-example/node_modules/babel-loader/lib/index.js!/Users/justina/git/vue-highcharts-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/justina/git/vue-highcharts-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justina/git/vue-highcharts-example/src/views/D3js.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/justina/git/vue-highcharts-example/src/views/D3js.vue","mtime":1537460099107},{"path":"/Users/justina/git/vue-highcharts-example/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/justina/git/vue-highcharts-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justina/git/vue-highcharts-example/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/justina/git/vue-highcharts-example/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport D3js from '../components/D3js.vue';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nvar data = [99, 71, 78, 25, 36, 92];\nexport default {\n  name: 'd3js',\n  components: {\n    D3js: D3js\n  },\n  methods: {\n    // define a method that will be used to get the data from the API\n    getData: function getData() {\n      var _this = this;\n\n      // console.log('testing the getData() call');\n      axios.get('https://repods.io/api/markode/FIFAWorldCup/reports/5818', {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\n          \"Access-Control-Allow-Headers\": \"X-Requested-With, content-type, Authorization\"\n        },\n        auth: {\n          username: '908ce8e1-95bc-43b7-a9f3-20512f2851b7',\n          password: ''\n        }\n      }) // HTTP GET Request\n      // .get('https://api.chucknorris.io/jokes/random')\n      .then(function (response) {\n        // console.log('give me the result', response.data.value);\n        console.log('give me the result', response);\n      }).catch(function (error) {// Executes if an error occurs if code is not >= 200 && < 300\n      }).finally(function () {\n        return _this.loading = false;\n      }); // Always occurs even if there is an error\n    },\n    parseData: function parseData(response) {// return _.map(response, (value, key) => [moment(key, 'YYYY-MM-DD').valueOf(), value]);\n    }\n  },\n  data: function data() {\n    // return the data\n    return {\n      devServer: {\n        historyApiFallback: true,\n        watchOptions: {\n          aggregateTimeout: 300,\n          poll: 1000\n        },\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\n          \"Access-Control-Allow-Headers\": \"X-Requested-With, content-type, Authorization\"\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    var svg = d3.select(this.$el).append('svg').attr('width', 500).attr('height', 270).append('g').attr('transform', 'translate(0, 10)');\n    var x = d3.scaleLinear().range([0, 430]);\n    var y = d3.scaleLinear().range([210, 0]);\n    d3.axisLeft().scale(x);\n    d3.axisTop().scale(y);\n    x.domain(d3.extent(data, function (d, i) {\n      return i;\n    }));\n    y.domain([0, d3.max(data, function (d) {\n      return d;\n    })]);\n    var createPath = d3.line().x(function (d, i) {\n      return x(i);\n    }).y(function (d) {\n      return y(d);\n    });\n    svg.append('path').attr('d', createPath(data));\n    this.getData();\n  }\n};",{"version":3,"sources":["D3js.vue"],"names":[],"mappings":";;;;;;AAOA,OAAA,IAAA,MAAA,wBAAA;AACA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,IAAA,OAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAEA,eAAA;AACA,QAAA,MADA;AAEA,cAAA;AACA;AADA,GAFA;AAKA,WAAA;AAIA;AACA,WALA,qBAKA;AAAA;;AACA;AACA,YACA,GADA,CACA,yDADA,EACA;AACA,iBAAA;AACA,yCAAA,GADA;AAEA,0CAAA,wCAFA;AAGA,0CAAA;AAHA,SADA;AAMA,cAAA;AACA,oBAAA,sCADA;AAEA,oBAAA;AAFA;AANA,OADA,EAWA;AACA;AAZA,OAaA,IAbA,CAaA,oBAAA;AACA;AACA,gBAAA,GAAA,CAAA,oBAAA,EAAA,QAAA;AACA,OAhBA,EAmBA,KAnBA,CAmBA,iBAAA,CAAA;AAEA,OArBA,EAsBA,OAtBA,CAsBA;AAAA,eAAA,MAAA,OAAA,GAAA,KAAA;AAAA,OAtBA,EAFA,CAwBA;AACA,KA9BA;AAgCA,aAhCA,qBAgCA,QAhCA,EAgCA,CACA;AACA;AAlCA,GALA;AA0CA,MA1CA,kBA0CA;AACA;AACA,WAAA;AACA,iBAAA;AACA,4BAAA,IADA;AAEA,sBAAA;AAAA,4BAAA,GAAA;AAAA,gBAAA;AAAA,SAFA;AAGA,iBAAA;AACA,yCAAA,GADA;AAEA,0CAAA,wCAFA;AAGA,0CAAA;AAHA;AAHA;AADA,KAAA;AAWA,GAvDA;AAyDA,SAzDA,qBAyDA;AACA,QAAA,MAAA,GAAA,MAAA,CAAA,KAAA,GAAA,EACA,MADA,CACA,KADA,EAEA,IAFA,CAEA,OAFA,EAEA,GAFA,EAGA,IAHA,CAGA,QAHA,EAGA,GAHA,EAIA,MAJA,CAIA,GAJA,EAKA,IALA,CAKA,WALA,EAKA,kBALA,CAAA;AAOA,QAAA,IAAA,GAAA,WAAA,GAAA,KAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA;AACA,QAAA,IAAA,GAAA,WAAA,GAAA,KAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAEA,OAAA,QAAA,GAAA,KAAA,CAAA,CAAA;AACA,OAAA,OAAA,GAAA,KAAA,CAAA,CAAA;AACA,MAAA,MAAA,CAAA,GAAA,MAAA,CAAA,IAAA,EAAA,UAAA,CAAA,EAAA,CAAA;AAAA,aAAA,CAAA;AAAA,KAAA,CAAA;AACA,MAAA,MAAA,CAAA,CAAA,CAAA,EAAA,GAAA,GAAA,CAAA,IAAA,EAAA;AAAA,aAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AACA,QAAA,aAAA,GAAA,IAAA,GACA,CADA,CACA,UAAA,CAAA,EAAA,CAAA;AAAA,aAAA,EAAA,CAAA,CAAA;AAAA,KADA,EAEA,CAFA,CAEA;AAAA,aAAA,EAAA,CAAA,CAAA;AAAA,KAFA,CAAA;AAIA,QAAA,MAAA,CAAA,MAAA,EAAA,IAAA,CAAA,GAAA,EAAA,WAAA,IAAA,CAAA;AAGA,SAAA,OAAA;AACA;AAhFA,CAAA","sourcesContent":["<template>\n  <div class=\"d3js\">\n    <D3js/>\n  </div>\n</template>\n\n<script>\n  import D3js from '../components/D3js.vue';\n  import * as d3 from 'd3';\n  import axios from 'axios';\n\n  const data = [99, 71, 78, 25, 36, 92];\n\n  export default {\n    name: 'd3js',\n    components: {\n      D3js,\n    },\n    methods: {\n\n\n\n      // define a method that will be used to get the data from the API\n      getData() {\n        // console.log('testing the getData() call');\n        axios\n          .get('https://repods.io/api/markode/FIFAWorldCup/reports/5818', {\n            headers: {\n              \"Access-Control-Allow-Origin\": \"*\",\n              \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\n              \"Access-Control-Allow-Headers\": \"X-Requested-With, content-type, Authorization\"\n            },\n            auth: {\n                username: '908ce8e1-95bc-43b7-a9f3-20512f2851b7',\n                password: ''\n            }\n          }) // HTTP GET Request\n          // .get('https://api.chucknorris.io/jokes/random')\n          .then(response => {\n            // console.log('give me the result', response.data.value);\n            console.log('give me the result', response);\n          })\n\n\n          .catch(error => { // Executes if an error occurs if code is not >= 200 && < 300\n\n          })\n          .finally(() => this.loading = false); // Always occurs even if there is an error\n      },\n\n      parseData(response) {\n        // return _.map(response, (value, key) => [moment(key, 'YYYY-MM-DD').valueOf(), value]);\n      },\n\n    },\n    data() {\n      // return the data\n      return {\n        devServer:  {\n        historyApiFallback: true,\n        watchOptions: { aggregateTimeout: 300, poll: 1000 },\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\n          \"Access-Control-Allow-Headers\": \"X-Requested-With, content-type, Authorization\"\n        }\n      }\n    }\n    },\n\n    mounted() {\n      const svg = d3.select(this.$el)\n        .append('svg')\n        .attr('width', 500)\n        .attr('height', 270)\n        .append('g')\n        .attr('transform', 'translate(0, 10)');\n\n      const x = d3.scaleLinear().range([0, 430]);\n      const y = d3.scaleLinear().range([210, 0]);\n\n      d3.axisLeft().scale(x);\n      d3.axisTop().scale(y);\n      x.domain(d3.extent(data, (d, i) => i));\n      y.domain([0, d3.max(data, d => d)]);\n      const createPath = d3.line()\n        .x((d, i) => x(i))\n        .y(d => y(d));\n\n      svg.append('path').attr('d', createPath(data));\n\n\n      this.getData();\n    },\n\n  };\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n  svg {\n    margin: 25px;\n  }\n  path {\n    fill: none;\n    stroke: #76BF8A;\n    stroke-width: 3px;\n  }\n</style>\n"],"sourceRoot":"src/views"}]}